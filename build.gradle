plugins {
    id 'java'
    id "org.springframework.boot" version "2.2.4.RELEASE"
    id "io.spring.dependency-management" version "1.0.8.RELEASE"
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group 'io.book'
version '0.1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-webflux"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.boot:spring-boot-starter-data-redis-reactive"
    implementation "org.springframework.session:spring-session-data-redis"
    implementation "com.querydsl:querydsl-jpa"
    implementation "org.mindrot:jbcrypt:0.4"

    implementation "com.google.guava:guava:28.2-jre"
    compileOnly "org.projectlombok:lombok:1.18.12"
    testCompileOnly "org.projectlombok:lombok:1.18.12"
    annotationProcessor "org.projectlombok:lombok:1.18.12"
    testAnnotationProcessor "org.projectlombok:lombok:1.18.12"

    runtimeOnly 'com.h2database:h2'

    testImplementation "org.springframework.boot:spring-boot-starter-test"
}


// querydsl 적용
def querydslSrcDir = 'src/main/generated'

querydsl {
    library = "com.querydsl:querydsl-apt"
    jpa = true
    querydslSourcesDir = querydslSrcDir
}

compileQuerydsl{
    options.annotationProcessorPath = configurations.querydsl
}

configurations {
    querydsl.extendsFrom compileClasspath
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java', querydslSrcDir]
        }
    }
}

test {
    maxParallelForks = Runtime.runtime.availableProcessors()
    useJUnitPlatform()
}